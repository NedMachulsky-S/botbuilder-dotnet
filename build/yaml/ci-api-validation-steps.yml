# TODO: Write logs

steps:
- task: DownloadPipelineArtifact@1
  displayName: 'Download BotBuilderDLLs artifact'
  inputs:
    artifactName: 'BotBuilderDLLs-Debug-Windows-netcoreapp31'
    targetPath: '$(System.ArtifactsDirectory)/Artifacts'

- powershell: |
    $xml = "<?xml version=""1.0"" encoding=""utf-8""?>`n<packages>`n"

    $env:BotBuilderDll.Split(",") | ForEach-Object {
      $library = $_.Trim()
      $xml += "  <package id=""" + $library + """ version=""" + $env:ApiCompatVersion + """/>`n"
    }
    $xml += "</packages>"
    New-Item -Path $(System.DefaultWorkingDirectory) -Name "packages.config" -ItemType "file" -Value $xml -Force
    
    $xml
  displayName: 'Generate NuGet packages.config File'

- task: NuGetCommand@2
  displayName: 'NuGet Install Packages'
  inputs:
    command: custom
    arguments: 'install $(System.DefaultWorkingDirectory)\packages.config -OutputDirectory $(System.DefaultWorkingDirectory)\DownloadedNuGet'

- task: CmdLine@1
  displayName: 'Run dir'
  inputs:
    filename: dir
    arguments: '..\*.* /s'
  enabled: false

- powershell: |
    $libraries = ($env:BotBuilderDll -replace ",", ".dll ") + ".dll"

    Write-Host "##vso[task.setvariable variable=librariesToCompare]$libraries"

    $path = "DownloadedNuGet\**\lib\netstandard2.0\*"

    If (!(Test-Path "LibrariesToCompare\")) {
      New-Item -Path "LibrariesToCompare\" -ItemType Directory
    }

    Copy-Item -Path $path -Destination "LibrariesToCompare\" -Recurse -Force

  displayName: 'Prepare Nuget Libraries to Binary Compare'

- task: CmdLine@1
  displayName: 'NuGet LibrariesToCompare Folder'
  inputs:
    filename: dir
    arguments: 'LibrariesToCompare\*.* /s'

- task: SOUTHWORKS.binaries-comparer.custom-build-release-task.binaries-comparer@0
  displayName: 'Compare Binaries'
  inputs:
    contractsRootFolder: 'LibrariesToCompare\'
    contractsFileName: '$(librariesToCompare)'
    implFolder: '$(System.ArtifactsDirectory)/Artifacts'
    failOnIssue: true
    resolveFx: false
    generateLog: true
    outputFilename: 'CompatResults.txt'
    outputFolder: '$(Build.ArtifactStagingDirectory)'
    useBaseline: false

- powershell: |
    # TODO: Work in progress

    $FileName = "$(Build.ArtifactStagingDirectory)\CompatResults.txt"
    $FileContent = @(Get-Content $FileName)
    
    $result = ''

    ForEach ($line in $FileContent) {
      $firstIndex =  $line.IndexOf('**') + 2
      $lastIndex = $line.LastIndexOf('**')

      $libraries = $line.Substring($firstIndex, $lastIndex - $firstIndex).Split(' ')

      $result = $line.Substring(0, $firstIndex - 3) + ':' + "`n"

      ForEach ($library in $libraries) {
        $libraryName = $library.Replace('.dll','') 
        $libraryName += " compared against [version 1](https://www.nuget.org/packages/$libraryName/1)"

        $result += '- ' + $libraryName + "`n"
      }
    } 
      
    if ($FileContent.Length -eq 1) {
      [system.io.file]::WriteAllText($fileName, $result)
    } else {
      Set-Content $fileName $FileContent
    }
    
    $result
  displayName: 'Insert nuget link into ApiCompat results file.'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Compat Results artifact'
  inputs:
    ArtifactName: 'BotBuilderDLLs.CompatResults'

- script: |
   cd ..
   dir /s
  displayName: 'Dir workspace'
  continueOnError: true
  condition: succeededOrFailed()
