pool:

  name: Azure Pipelines

  demands:

  - msbuild

  - visualstudio



#Your build pipeline references a secret variable named ‘AppId’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it secret. See https://go.microsoft.com/fwlink/?linkid=865972

#Your build pipeline references a secret variable named ‘AppSecret’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it secret. See https://go.microsoft.com/fwlink/?linkid=865972

#Your build pipeline references a secret variable named ‘WebexRoomId’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it secret. See https://go.microsoft.com/fwlink/?linkid=865972

#Your build pipeline references a secret variable named ‘RefreshToken’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it secret. See https://go.microsoft.com/fwlink/?linkid=865972

#Your build pipeline references a secret variable named ‘AppId’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it secret. See https://go.microsoft.com/fwlink/?linkid=865972

#Your build pipeline references a secret variable named ‘AppSecret’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it secret. See https://go.microsoft.com/fwlink/?linkid=865972

#Your build pipeline references a secret variable named ‘WebexIntegrationClientSecret’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it secret. See https://go.microsoft.com/fwlink/?linkid=865972

variables:

  BuildPlatform: 'any cpu'

  BuildConfiguration: 'debug'



steps:

- task: UseDotNet@2

  displayName: 'Use .Net Core sdk 2.1.x'

  inputs:

    version: 2.1.x



- task: UseDotNet@2

  displayName: 'Use .Net Core sdk 3.0.x'

  inputs:

    version: 3.0.x



- task: NuGetToolInstaller@1

  displayName: 'Use NuGet 4.9.1'



- task: NuGetCommand@2

  displayName: 'NuGet restore'

  inputs:

    restoreSolution: '$(System.DefaultWorkingDirectory)\Microsoft.Bot.Builder.sln'



- task: VSBuild@1

  displayName: 'Build solution Microsoft.Bot.Builder.sln'

  inputs:

    solution: Microsoft.Bot.Builder.sln

    platform: '$(BuildPlatform)'

    configuration: '$(BuildConfiguration)'



- task: DotNetCoreCLI@2

  displayName: 'dotnet publish'

  inputs:

    command: publish

    publishWebProjects: false

    projects: '$(System.DefaultWorkingDirectory)\tests\Adapters\Microsoft.Bot.Builder.Adapters.Webex.TestBot\Microsoft.Bot.Builder.Adapters.Webex.TestBot.csproj'

    arguments: '--output $(System.DefaultWorkingDirectory)\tests\Adapters\Microsoft.Bot.Builder.Adapters.Webex.TestBot\PublishedBot --framework netcoreapp2.1'

    modifyOutputPath: false



- task: AzureCLI@1

  displayName: 'Azure CLI call az deployment create --name "$(ResourceGroup)" --template-file "$(System.DefaultWorkingDirectory)\tests\Adapters\Microsoft.Bot.Builder.Adapters.Webex.TestBot\DeploymentTemplates\template-with-new-rg.json" --location "westus" --parameters appId=$(AppId) appSecret="$(AppSecret)" botId="$(WebexAzureBotName)" botSku=F0 newAppServicePlanName="$(WebexAzureBotName)" newWebAppName="$(WebexAzureBotName)" groupName="$(ResourceGroup)" groupLocation="westus" newAppServicePlanLocation="westus" webexPublicAddress="$(WebexPublicAddress)" webexAccessToken="$(WebexAccessToken)" webexSecret="$(WebhookSecret)" webexWebhookName="$(WebexWebhookName)"'

  inputs:

    azureSubscription: 'mr-azure-subscription'

    scriptLocation: inlineScript

    inlineScript: 'call az deployment create --name "$(ResourceGroupName)" --template-file "$(System.DefaultWorkingDirectory)\tests\Adapters\Microsoft.Bot.Builder.Adapters.Webex.TestBot\DeploymentTemplates\template-with-new-rg.json" --location "westus" --parameters appId=$(AppId) appSecret="$(AppSecret)" botId="$(AzureBotName)" botSku=F0 newAppServicePlanName="$(AzureBotName)" newWebAppName="$(AzureBotName)" groupName="$(ResourceGroupName)" groupLocation="westus" newAppServicePlanLocation="westus" webexPublicAddress="$(AzureBotPublicAddress)" webexAccessToken="$(WebexBotAccessToken)" webexSecret="$(WebexWebhookSecret)" webexWebhookName="$(WebexWebhookName)"'



- task: AzureCLI@1

  displayName: 'Azure CLI '

  inputs:

    azureSubscription: 'mr-azure-subscription'

    scriptLocation: inlineScript

    inlineScript: 'call az webapp deployment source config-zip --resource-group "$(ResourceGroupName)" --name "$(AzureBotName)" --src "$(System.DefaultWorkingDirectory)\tests\Adapters\Microsoft.Bot.Builder.Adapters.Webex.TestBot\PublishedBot\PublishedBot.zip"'



- powershell: |
   echo '##vso[task.setvariable variable=WEBEX_ROOM_ID]$(WebexRoomId)'
   echo '##vso[task.setvariable variable=REFRESH_TOKEN]$(RefreshToken)'
   echo '##vso[task.setvariable variable=TESTAPPID]$(AppId)'
   echo '##vso[task.setvariable variable=TESTPASSWORD]$(AppSecret)'
   echo '##vso[task.setvariable variable=INTEGRATION_CLIENT_SECRET]$(WebexIntegrationClientSecret)'

  displayName: 'PowerShell Script'



- task: DotNetCoreCLI@2

  displayName: 'dotnet test'

  inputs:

    command: test

    projects: 'FunctionalTests\Microsoft.Bot.Builder.FunctionalTests\Microsoft.Bot.Builder.FunctionalTests.csproj'

    arguments: '-v n --configuration $(BuildConfiguration) --no-build --no-restore --filter WebexClientTest'



- task: AzureCLI@1

  displayName: 'Azure CLI '

  inputs:

    azureSubscription: 'mr-azure-subscription'

    scriptLocation: inlineScript

    inlineScript: 'call az group delete -n "$(ResourceGroupName)" --yes'



