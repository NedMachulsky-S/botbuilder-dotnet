steps:
- task: petergroenewegen.PeterGroenewegen-Xpirit-Vsts-Build-InlinePowershell.Xpirit-Vsts-Build-InlinePowershell.InlinePowershell@1
  displayName: 'Start CosmosDB Emulator'
  inputs:
    Script: |
        Write-Host "Starting CosmosDB Emulator on Windows"
        Import-Module "C:/Program Files/Azure Cosmos DB Emulator/PSModules/Microsoft.Azure.CosmosDB.Emulator"
        Start-CosmosDbEmulator

- task: DotNetCoreCLI@2
  displayName: dotnet test
  inputs:
    command: test
    projects: |
     Tests/**/*Tests.csproj
    arguments: '-v n --configuration debug --no-build --no-restore --filter "TestCategory!=IgnoreInAutomatedBuild&TestCategory!=FunctionalTests" /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:Include=\"[Bot.Builder.]*%2c[Bot.Builder.Adapters.Twilio]*%2c[Bot.Builder.Teams]*%2c[Bot.Builder.AI.Luis]*%2c[Bot.Builder.AI.QnA]*%2c[Bot.Builder.ApplicationInsights]*%2c[Bot.Builder.Azure]*%2c[Bot.Builder.Configuration]*%2c[Bot.Builder.Connector]*%2c[Bot.Builder.Connector.Teams]*%2c[Bot.Builder.Dialogs]*%2c[Bot.Builder.Integration.ApplicationInsights.Core]*%2c[Bot.Builder.Integration.AspNet.Core]*%2c[Bot.Builder.TemplateManager]*%2c[Bot.Builder.Testing]*%2c[Bot.Builder.Adapters.Webex]*%2c[Bot.Builder.Adapters.Twilio]*%2c[Bot.Builder.Adapters.Slack]*%2c[Bot.Builder.Adapters.Facebook]*%2c[Bot.Expressions]*%2c[Bot.Builder.Dialogs.Adaptive]*%2c[Bot.Builder.Dialogs.Declarative]*%2c[Bot.Builder.LanguageGeneration]*\"'
  condition: eq(variables['BuildConfiguration'],'Debug-Windows')

- script: |
    Write-Host "Upload coverage result to codecov.io"
    dotnet tool install --global Codecov.Tool
    codecov -f $(Build.SourcesDirectory)/tests/**/coverage.cobertura.xml -t $(CODECOV_TOKEN)
  displayName: 'Upload coverage result'

# - script: |
#     dotnet tool install -g dotnet-reportgenerator-globaltool
#     reportgenerator -reports:$(Build.SourcesDirectory)/tests/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/CodeCoverage -reporttypes:HtmlInline_AzurePipelines;Cobertura
#   displayName: Create Code coverage report

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml'
    reportDirectory: '$(Build.SourcesDirectory)/CodeCoverage'
